{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3","program":"/home/farah/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","primal","/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=3e2e14b60f0b6e78","-C","extra-filename=-3e2e14b60f0b6e78","--out-dir","/home/farah/farah/rustTest/test1/target/rls/debug/deps","-L","dependency=/home/farah/farah/rustTest/test1/target/rls/debug/deps","--extern","primal_check=/home/farah/farah/rustTest/test1/target/rls/debug/deps/libprimal_check-f2bb1838cfa0d7da.rmeta","--extern","primal_estimate=/home/farah/farah/rustTest/test1/target/rls/debug/deps/libprimal_estimate-677f992640e4d72a.rmeta","--extern","primal_sieve=/home/farah/farah/rustTest/test1/target/rls/debug/deps/libprimal_sieve-4b49b7e25bb38448.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/farah/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/farah/farah/rustTest/test1/target/rls/debug/deps/libprimal-3e2e14b60f0b6e78.rmeta"},"prelude":{"crate_id":{"name":"primal","disambiguator":[116046394639001190,1499306309307314862]},"crate_root":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src","external_crates":[{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":15,"id":{"name":"primal_estimate","disambiguator":[10316778880785654868,12060577449341985343]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":16,"id":{"name":"primal_check","disambiguator":[12180764475397437583,1791147772493752893]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":17,"id":{"name":"num_integer","disambiguator":[17800354997309832170,16669246717813230260]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[6643851618786239409,10976735155173267543]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":19,"id":{"name":"primal_sieve","disambiguator":[6828214071388456040,238257328402817221]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":20,"id":{"name":"primal_bit","disambiguator":[14950146223990173385,6764343560699486317]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":21,"id":{"name":"hamming","disambiguator":[13348884593016673595,12436361444491170573]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":22,"id":{"name":"smallvec","disambiguator":[16051154063784861331,5806567301211906238]}},{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","num":23,"id":{"name":"maybe_uninit","disambiguator":[15770100821742857798,12550774253546202269]}}],"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":0,"byte_end":9795,"line_start":1,"line_end":285,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":9},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8903,"byte_end":8911,"line_start":252,"line_end":252,"column_start":26,"column_end":34},"alias_span":null,"name":"estimate_prime_pi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":10},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8959,"byte_end":8968,"line_start":253,"line_end":253,"column_start":26,"column_end":35},"alias_span":null,"name":"estimate_nth_prime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":20},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":9014,"byte_end":9026,"line_start":254,"line_end":254,"column_start":23,"column_end":35},"alias_span":null,"name":"is_prime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":11},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":9063,"byte_end":9079,"line_start":255,"line_end":255,"column_start":24,"column_end":40},"alias_span":null,"name":"as_perfect_power","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":12},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":9081,"byte_end":9095,"line_start":255,"line_end":255,"column_start":42,"column_end":56},"alias_span":null,"name":"as_prime_power","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":207},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":9122,"byte_end":9136,"line_start":257,"line_end":257,"column_start":24,"column_end":38},"alias_span":null,"name":"StreamingSieve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":252},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":9138,"byte_end":9143,"line_start":257,"line_end":257,"column_start":40,"column_end":45},"alias_span":null,"name":"Sieve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":274},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":9145,"byte_end":9156,"line_start":257,"line_end":257,"column_start":47,"column_end":58},"alias_span":null,"name":"SievePrimes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":35},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":9158,"byte_end":9164,"line_start":257,"line_end":257,"column_start":60,"column_end":66},"alias_span":null,"name":"Primes","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":0,"byte_end":9795,"line_start":1,"line_end":285,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" `primal` puts raw power into prime numbers.","sig":null,"attributes":[{"value":"! `primal` puts raw power into prime numbers.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":0,"byte_end":47,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":48,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crates includes","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":52,"byte_end":76,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":77,"byte_end":80,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - optimised prime sieves","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":81,"byte_end":109,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"! - checking for primality","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":110,"byte_end":138,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"! - enumerating primes","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":139,"byte_end":163,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"! - factorising numbers","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":164,"byte_end":189,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"! - estimating upper and lower bounds for π(*n*) (the number of primes","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":190,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"!   below *n*) and *p<sub>k</sub>* (the <i>k</i>th prime)","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":264,"byte_end":323,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":324,"byte_end":327,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! This uses a state-of-the-art cache-friendly Sieve of Eratosthenes","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":328,"byte_end":397,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"! to enumerate the primes up to some fixed bound (in a memory","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":398,"byte_end":461,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"! efficient manner), and then allows this cached information to be","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":462,"byte_end":530,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"! used for things like enumerating and counting primes.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":531,"byte_end":588,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":589,"byte_end":592,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! `primal` takes around 2.8 seconds and less than 3MB of RAM to","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":593,"byte_end":658,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"! count the exact number of primes below 10<sup>10</sup> (455052511)","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":659,"byte_end":729,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"! on my laptop (i7-3517U).","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":730,"byte_end":758,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":759,"byte_end":762,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! [*Source*](http://github.com/huonw/primal)","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":763,"byte_end":809,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":810,"byte_end":813,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! # Using this library","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":814,"byte_end":838,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":839,"byte_end":842,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! Just add the following to your [`Cargo.toml`](http://crates.io/):","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":843,"byte_end":912,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":913,"byte_end":916,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":917,"byte_end":928,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":929,"byte_end":947,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! primal = \"0.2\"","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":948,"byte_end":966,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":967,"byte_end":974,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":975,"byte_end":978,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":979,"byte_end":993,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":994,"byte_end":997,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! ## \"Indexing\" Primes","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":998,"byte_end":1022,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1023,"byte_end":1026,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Let's find the 10001st prime. The easiest way is to enumerate the","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1027,"byte_end":1096,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"! primes, and find the 10001st:","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1097,"byte_end":1130,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1131,"byte_end":1134,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1135,"byte_end":1146,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"! // (.nth is zero indexed.)","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1147,"byte_end":1177,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"! let p = primal::Primes::all().nth(10001 - 1).unwrap();","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1178,"byte_end":1236,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"! println!(\"The 10001st prime is {}\", p); // 104743","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1237,"byte_end":1290,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1291,"byte_end":1298,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1299,"byte_end":1302,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! This takes around 400 microseconds on my computer, which seems","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1303,"byte_end":1369,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"! nice and quick, but, `Primes` is flexible at the cost of","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1370,"byte_end":1430,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"! performance: we can make it faster. The `StreamingSieve` type","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1431,"byte_end":1496,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"! offers a specialised `nth_prime` function:","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1497,"byte_end":1543,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1544,"byte_end":1547,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1548,"byte_end":1559,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"! let p = primal::StreamingSieve::nth_prime(10001);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1560,"byte_end":1613,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"! println!(\"The 10001st prime is {}\", p); // 104743","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1614,"byte_end":1667,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1668,"byte_end":1675,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1676,"byte_end":1679,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! This runs in only 10 microseconds! `StreamingSieve` is extremely","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1680,"byte_end":1748,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"! efficient and uses very little memory. It is the best way to solve","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1749,"byte_end":1819,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"! this task with `primal`.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1820,"byte_end":1848,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1849,"byte_end":1852,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! Since that was so easy, let's now make the problem bigger and","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1853,"byte_end":1918,"line_start":59,"line_end":59,"column_start":1,"column_end":66}},{"value":"! harder: find the sum of the 100,000th, 200,000th, 300,000th, ...,","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1919,"byte_end":1988,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"! 10,000,000th primes (100 in total).","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":1989,"byte_end":2028,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2029,"byte_end":2032,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! We could call `StreamingSieve::nth_prime` repeatedly:","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2033,"byte_end":2090,"line_start":63,"line_end":63,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2091,"byte_end":2094,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2095,"byte_end":2113,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"! // the primes we want to find","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2114,"byte_end":2147,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"! let ns = (1..100 + 1).map(|x| x * 100_000).collect::<Vec<_>>();","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2148,"byte_end":2215,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2216,"byte_end":2219,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! // search and sum them up","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2220,"byte_end":2249,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"! let sum = ns.iter()","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2250,"byte_end":2273,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"!             .map(|n| primal::StreamingSieve::nth_prime(*n))","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2274,"byte_end":2337,"line_start":71,"line_end":71,"column_start":1,"column_end":64}},{"value":"!             .fold(0, |a, b| a + b);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2338,"byte_end":2377,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"! println!(\"the sum is {}\", sum);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2378,"byte_end":2413,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2414,"byte_end":2421,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2422,"byte_end":2425,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! This takes around 1.6s seconds to print `the sum is 8795091674`;","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2426,"byte_end":2494,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"! not so speedy. Each call to `nth_prime` is individually fast (400","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2495,"byte_end":2564,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"! microseconds for 100,000 to 40 milliseconds for 10,000,000) but","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2565,"byte_end":2632,"line_start":78,"line_end":78,"column_start":1,"column_end":68}},{"value":"! they add up to something bad. Every one is starting from the start","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2633,"byte_end":2703,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"! and redoing work that previous calls have done... wouldn't it be","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2704,"byte_end":2772,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"! nice if we could just do the computation for 10,000,000 and reuse","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2773,"byte_end":2842,"line_start":81,"line_end":81,"column_start":1,"column_end":70}},{"value":"! that for the smaller ones?","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2843,"byte_end":2873,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2874,"byte_end":2877,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! The `Sieve` type is a wrapper around `StreamingSieve` that","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2878,"byte_end":2940,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"! caches information, allowing repeated queries to be answered","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":2941,"byte_end":3005,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"! efficiently.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3006,"byte_end":3022,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3023,"byte_end":3026,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! There's one hitch: `Sieve` requires a limit to know how far to","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3027,"byte_end":3093,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"! sieve: we need some way to find an upper bound to be guaranteed to","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3094,"byte_end":3164,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"! be at least as large as all our primes. We could guess that, say,","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3165,"byte_end":3234,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"! 10<sup>10</sup> will be large enough and use that, but that's a","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3235,"byte_end":3302,"line_start":91,"line_end":91,"column_start":1,"column_end":68}},{"value":"! huge overestimate (spoilers: the 10,000,000th prime is around","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3303,"byte_end":3368,"line_start":92,"line_end":92,"column_start":1,"column_end":66}},{"value":"! 2&times;10<sup>8</sup>). We could also try filtering with","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3369,"byte_end":3430,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"! exponentially larger upper bounds until we find one that works","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3431,"byte_end":3497,"line_start":94,"line_end":94,"column_start":1,"column_end":67}},{"value":"! (e.g. doubling each time), or, we could just take a shortcut and","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3498,"byte_end":3566,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"! use deeper mathematics via","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3567,"byte_end":3597,"line_start":96,"line_end":96,"column_start":1,"column_end":31}},{"value":"! [`estimate_nth_prime`](fn.estimate_nth_prime.html).","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3598,"byte_end":3653,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3654,"byte_end":3657,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3658,"byte_end":3669,"line_start":99,"line_end":99,"column_start":1,"column_end":12}},{"value":"! // the primes we want to find","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3670,"byte_end":3703,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"! let ns = (1..100 + 1).map(|x| x * 100_000).collect::<Vec<_>>();","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3704,"byte_end":3771,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3772,"byte_end":3775,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! // find our upper bound","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3776,"byte_end":3803,"line_start":103,"line_end":103,"column_start":1,"column_end":28}},{"value":"! let (_lo, hi) = primal::estimate_nth_prime(10_000_000);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3804,"byte_end":3863,"line_start":104,"line_end":104,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3864,"byte_end":3867,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! // find the primes up to this upper bound","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3868,"byte_end":3913,"line_start":106,"line_end":106,"column_start":1,"column_end":46}},{"value":"! let sieve = primal::Sieve::new(hi as usize);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3914,"byte_end":3962,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3963,"byte_end":3966,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! // now we can efficiently sum them up","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":3967,"byte_end":4008,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"! let sum = ns.iter()","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4009,"byte_end":4032,"line_start":110,"line_end":110,"column_start":1,"column_end":24}},{"value":"!             .map(|n| sieve.nth_prime(*n))","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4033,"byte_end":4078,"line_start":111,"line_end":111,"column_start":1,"column_end":46}},{"value":"!             .fold(0, |a, b| a + b);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4079,"byte_end":4118,"line_start":112,"line_end":112,"column_start":1,"column_end":40}},{"value":"! println!(\"the sum is {}\", sum);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4119,"byte_end":4154,"line_start":113,"line_end":113,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4155,"byte_end":4162,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4163,"byte_end":4166,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! This takes around 40 milliseconds, and gives the same output: much","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4167,"byte_end":4237,"line_start":116,"line_end":116,"column_start":1,"column_end":71}},{"value":"! better!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4238,"byte_end":4249,"line_start":117,"line_end":117,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4250,"byte_end":4253,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! (By the way, the version using 10<sup>10</sup> as the bound","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4254,"byte_end":4317,"line_start":119,"line_end":119,"column_start":1,"column_end":64}},{"value":"! instead of the more accurate estimate still only takes ~3","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4318,"byte_end":4379,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"! seconds.)","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4380,"byte_end":4393,"line_start":121,"line_end":121,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4394,"byte_end":4397,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! ## Counting Primes","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4398,"byte_end":4420,"line_start":123,"line_end":123,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4421,"byte_end":4424,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! Another problem: count the number of primes below 1 million. This","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4425,"byte_end":4494,"line_start":125,"line_end":125,"column_start":1,"column_end":70}},{"value":"! is evaluating the [prime-counting function","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4495,"byte_end":4541,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"! π](https://en.wikipedia.org/wiki/Prime-counting_function),","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4542,"byte_end":4605,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"! i.e. π(10<sup>6</sup>).","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4606,"byte_end":4634,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4635,"byte_end":4638,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! As above, there's a few ways to attack this: the iterator, and the","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4639,"byte_end":4709,"line_start":130,"line_end":130,"column_start":1,"column_end":71}},{"value":"! sieves.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4710,"byte_end":4721,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4722,"byte_end":4725,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4726,"byte_end":4737,"line_start":133,"line_end":133,"column_start":1,"column_end":12}},{"value":"! const LIMIT: usize = 1_000_000;","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4738,"byte_end":4773,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4774,"byte_end":4777,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! // iterator","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4778,"byte_end":4793,"line_start":136,"line_end":136,"column_start":1,"column_end":16}},{"value":"! let count = primal::Primes::all().take_while(|p| *p < LIMIT).count();","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4794,"byte_end":4867,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"! println!(\"there are {} primes below 1 million\", count); // 78498","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4868,"byte_end":4936,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4937,"byte_end":4940,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! // sieves","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4941,"byte_end":4954,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"! let sieve = primal::Sieve::new(LIMIT);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4955,"byte_end":4997,"line_start":141,"line_end":141,"column_start":1,"column_end":43}},{"value":"! let count = sieve.prime_pi(LIMIT);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":4998,"byte_end":5036,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"! println!(\"there are {} primes below 1 million\", count);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5037,"byte_end":5096,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5097,"byte_end":5100,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! let count = primal::StreamingSieve::prime_pi(LIMIT);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5101,"byte_end":5157,"line_start":145,"line_end":145,"column_start":1,"column_end":57}},{"value":"! println!(\"there are {} primes below 1 million\", count);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5158,"byte_end":5217,"line_start":146,"line_end":146,"column_start":1,"column_end":60}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5218,"byte_end":5225,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5226,"byte_end":5229,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! `StreamingSieve` is fastest (380 microseconds) followed by `Sieve`","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5230,"byte_end":5300,"line_start":149,"line_end":149,"column_start":1,"column_end":71}},{"value":"! (400) with `Primes` bringing up the rear at 1300 microseconds. Of","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5301,"byte_end":5370,"line_start":150,"line_end":150,"column_start":1,"column_end":70}},{"value":"! course, repeated queries will be faster with `Sieve` than with","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5371,"byte_end":5437,"line_start":151,"line_end":151,"column_start":1,"column_end":67}},{"value":"! `StreamingSieve`, but that flexibility comes at the cost of extra","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5438,"byte_end":5507,"line_start":152,"line_end":152,"column_start":1,"column_end":70}},{"value":"! memory use.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5508,"byte_end":5523,"line_start":153,"line_end":153,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5524,"byte_end":5527,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! If an approximation is all that is required, `estimate_prime_pi`","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5528,"byte_end":5596,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"! provides close upper and lower bounds:","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5597,"byte_end":5639,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5640,"byte_end":5643,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5644,"byte_end":5655,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"! let (lo, hi) = primal::estimate_prime_pi(1_000_000);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5656,"byte_end":5712,"line_start":159,"line_end":159,"column_start":1,"column_end":57}},{"value":"! println!(\"there are between {} and {} primes below 1 million\", lo, hi);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5713,"byte_end":5788,"line_start":160,"line_end":160,"column_start":1,"column_end":76}},{"value":"! // 78304, 78573","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5789,"byte_end":5808,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5809,"byte_end":5816,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5817,"byte_end":5820,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! ## Searching Primes","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5821,"byte_end":5844,"line_start":164,"line_end":164,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5845,"byte_end":5848,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! Now for something where `Primes` might be useful: find the first","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5849,"byte_end":5917,"line_start":166,"line_end":166,"column_start":1,"column_end":69}},{"value":"! prime where the binary expansion (not including trailing zeros)","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5918,"byte_end":5985,"line_start":167,"line_end":167,"column_start":1,"column_end":68}},{"value":"! ends like `00..001` with at least 27 zeros. This condition is","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":5986,"byte_end":6051,"line_start":168,"line_end":168,"column_start":1,"column_end":66}},{"value":"! checked by:","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6052,"byte_end":6067,"line_start":169,"line_end":169,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6068,"byte_end":6071,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6072,"byte_end":6083,"line_start":171,"line_end":171,"column_start":1,"column_end":12}},{"value":"! fn check(p: usize) -> bool {","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6084,"byte_end":6116,"line_start":172,"line_end":172,"column_start":1,"column_end":33}},{"value":"!     p > 1 && (p / 2).trailing_zeros() >= 27","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6117,"byte_end":6164,"line_start":173,"line_end":173,"column_start":1,"column_end":48}},{"value":"! }","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6165,"byte_end":6170,"line_start":174,"line_end":174,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6171,"byte_end":6178,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6179,"byte_end":6182,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! I have no idea how large the prime might be: I know it's","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6183,"byte_end":6243,"line_start":177,"line_end":177,"column_start":1,"column_end":61}},{"value":"! guaranteed to be at *least* 2<sup>27 + 1</sup> + 1, but not an","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6244,"byte_end":6310,"line_start":178,"line_end":178,"column_start":1,"column_end":67}},{"value":"! upper limit.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6311,"byte_end":6327,"line_start":179,"line_end":179,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6328,"byte_end":6331,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! The `Primes` iterator works perfectly for this:","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6332,"byte_end":6383,"line_start":181,"line_end":181,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6384,"byte_end":6387,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6388,"byte_end":6399,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"! # fn check(p: usize) -> bool {  p > 1 && (p / 2).trailing_zeros() >= 5 } // 27 is too slow","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6400,"byte_end":6494,"line_start":184,"line_end":184,"column_start":1,"column_end":95}},{"value":"! let p = primal::Primes::all().find(|p| check(*p)).unwrap();","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6495,"byte_end":6558,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"! println!(\"the prime is {}\", p);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6559,"byte_end":6594,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"! # assert_eq!(p, 193);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6595,"byte_end":6620,"line_start":187,"line_end":187,"column_start":1,"column_end":26}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6621,"byte_end":6628,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6629,"byte_end":6632,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"! It takes about 3.1 seconds for my computer to spit out 3,221,225,473.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6633,"byte_end":6706,"line_start":190,"line_end":190,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6707,"byte_end":6710,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"! Using a sieve is a little trickier: one approach is to start with","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6711,"byte_end":6780,"line_start":192,"line_end":192,"column_start":1,"column_end":70}},{"value":"! some estimated upper bound (like double the absolute lower bound),","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6781,"byte_end":6851,"line_start":193,"line_end":193,"column_start":1,"column_end":71}},{"value":"! look for a valid prime. If one isn't found, double the upper bound","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6852,"byte_end":6922,"line_start":194,"line_end":194,"column_start":1,"column_end":71}},{"value":"! and start again. The `primes_from` method allows for saving a","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6923,"byte_end":6988,"line_start":195,"line_end":195,"column_start":1,"column_end":66}},{"value":"! little bit of work: we can start iterating from an arbitrary point","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":6989,"byte_end":7059,"line_start":196,"line_end":196,"column_start":1,"column_end":71}},{"value":"! in the sequence, such as the lower bound.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7060,"byte_end":7105,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7106,"byte_end":7109,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7110,"byte_end":7121,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"! # fn check(p: usize) -> bool {  p > 1 && (p / 2).trailing_zeros() >= 5 } // 27 is too slow","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7122,"byte_end":7216,"line_start":200,"line_end":200,"column_start":1,"column_end":95}},{"value":"! let p;","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7217,"byte_end":7227,"line_start":201,"line_end":201,"column_start":1,"column_end":11}},{"value":"! let mut lower_bound = 1 << (27 + 1);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7228,"byte_end":7268,"line_start":202,"line_end":202,"column_start":1,"column_end":41}},{"value":"! # let mut lower_bound = 1 << (5 + 1);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7269,"byte_end":7310,"line_start":203,"line_end":203,"column_start":1,"column_end":42}},{"value":"! loop {","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7311,"byte_end":7321,"line_start":204,"line_end":204,"column_start":1,"column_end":11}},{"value":"!     // our upper bound is double the lower bound","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7322,"byte_end":7374,"line_start":205,"line_end":205,"column_start":1,"column_end":53}},{"value":"!     let sieve = primal::Sieve::new(lower_bound * 2);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7375,"byte_end":7431,"line_start":206,"line_end":206,"column_start":1,"column_end":57}},{"value":"!     if let Some(p_) = sieve.primes_from(lower_bound).find(|p| check(*p)) {","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7432,"byte_end":7510,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"!         p = p_;","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7511,"byte_end":7530,"line_start":208,"line_end":208,"column_start":1,"column_end":20}},{"value":"!         break","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7531,"byte_end":7548,"line_start":209,"line_end":209,"column_start":1,"column_end":18}},{"value":"!     }","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7549,"byte_end":7558,"line_start":210,"line_end":210,"column_start":1,"column_end":10}},{"value":"!     lower_bound *= 2;","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7559,"byte_end":7584,"line_start":211,"line_end":211,"column_start":1,"column_end":26}},{"value":"! }","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7585,"byte_end":7590,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"! println!(\"the prime is {}\", p);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7591,"byte_end":7626,"line_start":213,"line_end":213,"column_start":1,"column_end":36}},{"value":"! # assert_eq!(p, 193);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7627,"byte_end":7652,"line_start":214,"line_end":214,"column_start":1,"column_end":26}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7653,"byte_end":7660,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7661,"byte_end":7664,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! This takes around 3.5 seconds to spit out the same number. Slower","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7665,"byte_end":7734,"line_start":217,"line_end":217,"column_start":1,"column_end":70}},{"value":"! than the iterator!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7735,"byte_end":7757,"line_start":218,"line_end":218,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7758,"byte_end":7761,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! I was just using this silly condition as an example of something","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7762,"byte_end":7830,"line_start":220,"line_end":220,"column_start":1,"column_end":69}},{"value":"! that doesn't have an obvious upper bound, rather than a problem","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7831,"byte_end":7898,"line_start":221,"line_end":221,"column_start":1,"column_end":68}},{"value":"! that is hard to do fast. There's a much faster way to tackle it,","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7899,"byte_end":7967,"line_start":222,"line_end":222,"column_start":1,"column_end":69}},{"value":"! by inverting the problem: construct numbers that satisfy `check`,","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":7968,"byte_end":8037,"line_start":223,"line_end":223,"column_start":1,"column_end":70}},{"value":"! and check the primality of those.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8038,"byte_end":8075,"line_start":224,"line_end":224,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8076,"byte_end":8079,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"! The numbers that satisfy `check` are `k * (1 << (27 + 1)) + 1` for","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8080,"byte_end":8150,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"! `k >= 1`, so the only hard bit is testing primality. Fortunately,","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8151,"byte_end":8220,"line_start":227,"line_end":227,"column_start":1,"column_end":70}},{"value":"! `primal` offers the `is_prime` function which is an efficient way","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8221,"byte_end":8290,"line_start":228,"line_end":228,"column_start":1,"column_end":70}},{"value":"! to do primality tests, even of very large numbers.","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8291,"byte_end":8345,"line_start":229,"line_end":229,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8346,"byte_end":8349,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8350,"byte_end":8361,"line_start":231,"line_end":231,"column_start":1,"column_end":12}},{"value":"! let mut p = 0;","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8362,"byte_end":8380,"line_start":232,"line_end":232,"column_start":1,"column_end":19}},{"value":"! for k in 1.. {","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8381,"byte_end":8399,"line_start":233,"line_end":233,"column_start":1,"column_end":19}},{"value":"!     p = k * (1 << (27 + 1)) + 1;","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8400,"byte_end":8436,"line_start":234,"line_end":234,"column_start":1,"column_end":37}},{"value":"!     if primal::is_prime(p) { break }","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8437,"byte_end":8477,"line_start":235,"line_end":235,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8478,"byte_end":8483,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"! println!(\"the prime is {}\", p);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8484,"byte_end":8519,"line_start":237,"line_end":237,"column_start":1,"column_end":36}},{"value":"! assert_eq!(p, 3_221_225_473);","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8520,"byte_end":8553,"line_start":238,"line_end":238,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8554,"byte_end":8561,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8562,"byte_end":8565,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! This takes 6 <em>micro</em>seconds: more than 500,000&times;","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8566,"byte_end":8630,"line_start":241,"line_end":241,"column_start":1,"column_end":65}},{"value":"! faster than the iterator!","span":{"file_name":"/home/farah/.cargo/registry/src/github.com-1ecc6299db9ec823/primal-0.2.3/src/lib.rs","byte_start":8631,"byte_end":8660,"line_start":242,"line_end":242,"column_start":1,"column_end":30}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}